## Boxplot 

library(ggplot2)
p<-ggplot(loseit, aes(y = Loss, x = Diet))+ geom_boxplot() + ylab("Weight Loss")+ xlab("Diet") + ggtitle("Weight Loss by Diet") + coord_flip()
p

## Histogram

ggplot(loseit, aes(x = Loss)) + 
  geom_histogram(binwidth = 1, color = 'black', fill = 'white') + 
  facet_grid(Diet~.) +
  ggtitle("Weight Loss Between Groups") +
  labs(x = 'Weight Loss', y = 'Count')

## Summary Statistics Values 

Overall
mean(loseit$Loss)
the.sd = sd(loseit$Loss)

By group
aggregate(Loss ~ Diet, data = loseit1, mean)
aggregate(Loss ~ Diet, data = loseit1, sd)
aggregate(Loss ~ Diet, data = loseit1, length)

Analysis
##Assessing Normality with Shapiro-Wilks Test

new.model = lm(Loss ~ Diet,data = loseit)
ei = new.model$residuals
the.SWtest = shapiro.test(ei)
the.SWtest

##Assessing Homoscedasticity

Loss = `loseit1`[,2]
Diet = `loseit1`[1]
the.model = lm(Loss ~ Diet,data = loseit1)
Lost = data.frame(Loss,Diet)
Lost$ei = the.model$residuals
new.model = lm(Loss ~ Diet,data = loseit1)
ei = new.model$residuals
library(ggplot2)
qplot(Diet, ei, data = new.model) +  ggtitle("Errors vs. Groups") + xlab("Groups") + ylab("Errors") + geom_hline(yintercept = 0,col = "purple")

##Brown-Forsythe Test
library(car)
the.BFtest = leveneTest(ei~ Diet, data=Lost, center=median)
p.val = the.BFtest[[3]][1]
p.val

## ANOVA Table, F-Test

the.model = lm(Loss ~ Diet, data = loseit)
anova.table = anova(the.model)
Anova.table

## Power of the test

give.me.power = function(ybar,ni,MSE,alpha){
a = length(ybar) # Finds a
nt = sum(ni) #Finds the overall sample size
overall.mean = sum(ni*ybar)/nt # Finds the overall mean
phi = (1/sqrt(MSE))*sqrt( sum(ni*(ybar - overall.mean)^2)/a) #Finds the books value of phi
phi.star = a *phi^2 #Finds the value of phi we will use for R
Fc = qf(1-alpha,a-1,nt-a) #The critical value of F, use in Râ€™s function
power = 1 - pf(Fc, a-1, nt-a, phi.star)# The power, calculated using a non-central F
return(power)
}
group.means = by(loseit$Loss,loseit$Diet,mean)
group.nis = by(loseit$Loss,loseit$Diet,length)
MSE = anova.table[2,3]
the.power = give.me.power(group.means,group.nis,MSE,0.05)
the.power

## Boxplot

library(ggplot2)
p<-ggplot(loseit, aes(y = Loss, x = Diet))+ geom_boxplot() + ylab("Weight Loss")+ xlab("Diet") + ggtitle("Weight Loss by Diet") + coord_flip()
p

## Histogram

ggplot(loseit, aes(x = Loss)) + 
  geom_histogram(binwidth = 1, color = 'black', fill = 'white') + 
  facet_grid(Diet~.) +
  ggtitle("Weight Loss Between Groups") +
  labs(x = 'Weight Loss', y = 'Count')

## Tukey and Bonferroni Correction

group.means = by(loseit1$Loss,loseit1$Diet,mean)
group.nis = by(loseit1$Loss,loseit1$Diet,length)
the.model = lm(Loss ~ Diet, data = loseit1)
anova.table = anova(the.model)
MSE = anova.table[2,3]
nt = sum(group.nis)
a = length(group.means)
alpha = 0.01
Tuk = qtukey(1-alpha,a,nt-a)/sqrt(2)
g=3
B = qt(1-alpha/(2*g),nt-a)

## Confidence Intervals 

give.me.CI = function(ybar,ni,ci,MSE,multiplier){
if(sum(ci) != 0 & sum(ci !=0 ) != 1){
return("Error - you did not input a valid contrast")
} else if(length(ci) != length(ni)){
return("Error - not enough contrasts given")
}
else{
estimate = sum(ybar*ci)
SE = sqrt(MSE*sum(ci^2/ni))
CI = estimate + c(-1,1)*multiplier*SE
result = c(estimate,CI)
names(result) = c("Estimate","Lower Bound","Upper Bound")
return(result)
}
}

ci = c(1,-1,0) 
give.me.CI(group.means,group.nis,ci,MSE,Tuk)

ci = c(1,0,-1) 
give.me.CI(group.means,group.nis,ci,MSE,Tuk)

ci = c(0,1,-1) 
give.me.CI(group.means,group.nis,ci,MSE,Tuk)

